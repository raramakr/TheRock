name: Test PyTorch Wheels

on:
  workflow_dispatch:
    inputs:
      amdgpu_family:
        description: GPU family to test
        required: true
        type: string
        default: "gfx94X-dcgpu"
      test_runs_on:
        description: Runner label to use. The selected runner should have a GPU supported by amdgpu_family
        required: true
        type: string
        default: "linux-mi325-1gpu-ossci-rocm"
      package_index_url:
        description: Base Python package index URL to test, typically nightly/dev URL with a "v2" or "v2-staging" subdir (without a GPU family subdir)
        required: true
        type: string
        default: "https://rocm.nightlies.amd.com/v2"
      python_version:
        required: true
        type: string
        default: "3.12"
      torch_version:
        required: true
        type: string
      pytorch_version:
        description: PyTorch version to checkout. ("nightly", or "release/2.7")
        type: string
        default: "release/2.7"

  workflow_call:
    inputs:
      amdgpu_family:
        required: true
        type: string
      test_runs_on:
        required: true
        type: string
      package_index_url:
        required: true
        type: string
      python_version:
        required: true
        type: string
      torch_version:
        required: true
        type: string
      pytorch_version:
        description: PyTorch version to checkout. ("nightly", or "release/2.7")
        type: string
        default: "release/2.7"
      repository:
        description: "Repository to checkout. Otherwise, defaults to `github.repository`."
        type: string
      ref:
        description: "Branch, tag or SHA to checkout. Defaults to the reference or SHA that triggered the workflow."
        type: string

permissions:
  contents: read

jobs:
  test_wheels:
    name: Test PyTorch Wheels | ${{ inputs.amdgpu_family }}
    runs-on: ${{ inputs.test_runs_on }}
    container:
      image: ${{ contains(inputs.test_runs_on, 'linux') && 'ghcr.io/rocm/no_rocm_image_ubuntu24_04@sha256:405945a40deaff9db90b9839c0f41d4cba4a383c1a7459b28627047bf6302a26' || null }}
      options: --ipc host
        --group-add video
        --device /dev/kfd
        --device /dev/dri
        --group-add 992
        --env-file /etc/podinfo/gha-gpu-isolation-settings
    defaults:
      run:
        shell: bash
    env:
      VENV_DIR: ${{ github.workspace }}/.venv
      TORCH_VERSION: ${{ inputs.torch_version }}
      INPUT_AMDGPU_FAMILY: ${{ inputs.amdgpu_family }}
      INPUT_THEROCK_ROOT_DIR: ${{ github.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: ${{ inputs.repository || github.repository }}
          ref: ${{ inputs.ref || '' }}

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ inputs.python_version }}

      # Here we checkout the same version of PyTorch that wheels were built from
      # so we have the right set of test source files. We _probably_ don't need
      # to run HIPIFY or apply any patches, so we skip those steps to save time.
      # TODO(scotttodd): Windows will need to checkout to a shorter path.
      #                  When Windows runs full tests, fix that and re-enable.
      - name: Checkout PyTorch Source Repos from nightly branch
        # Checkout default upstream PyTorch/PyTorch branch.
        if: ${{ (inputs.pytorch_version == 'nightly') && (contains(inputs.test_runs_on, 'linux')) }}
        run: |
          ./external-builds/pytorch/pytorch_torch_repo.py checkout --repo-hashtag nightly --no-hipify --no-patch

      - name: Checkout PyTorch Source Repos from stable branch
        if: ${{ (inputs.pytorch_version != 'nightly') && (contains(inputs.test_runs_on, 'linux')) }}
        run: |
          python external-builds/pytorch/pytorch_torch_repo.py checkout --gitrepo-origin https://github.com/ROCm/pytorch.git --repo-hashtag ${{ inputs.pytorch_version }} --no-hipify --no-patch

      - name: Set up virtual environment
        run: |
          python build_tools/setup_venv.py ${VENV_DIR} \
            --packages torch==${TORCH_VERSION} \
            --index-url ${{ inputs.package_index_url }} \
            --index-subdir ${{ inputs.amdgpu_family }} \
            --activate-in-future-github-actions-steps

      - name: Install test requirements
        run: |
          python -m pip install -r external-builds/pytorch/requirements-test.txt
          pip freeze

      - name: Run rocm-sdk sanity tests
        run: |
          rocm-sdk test

      - name: Run PyTorch smoketests
        run: |
          pytest -v external-builds/pytorch/smoke-tests

      - name: Run PyTorch tests
        if: "contains(inputs.test_runs_on, 'linux')"
        run: |
          ./external-builds/pytorch/run_linux_pytorch_tests.py
